Sub Main ()
	C2_SelectBuildPosition()
	C2_DrawPath()
	C2_BuildWire()
End Sub

Function C2_SelectBuildPosition()
	With Pick
		.ClearAllPicks()
		.PickCirclecenterFromId("Coilholder:C61035-A0044-B200-RM1_SW0001",91)
	End With
	With WCS
		.AlignWCSWithSelected("Point")
		.RotateWCS("v",90.0)
	End With
End Function
Function C2_DrawPath()
	Dim t,t_max,r As Double
	t = 0
	t_max = (2*pi*N2)
	r = Coil2_RadiusMin
	While t < t_max
		t =	BuildUp(r, t, t_max)
		t =	BuildTop(r, t, t_max)
		r = r + Coil2_Diameter
		t =	BuildDown(r, t, t_max)
		t =	BuildBot(r, t, t_max)
		r = r + Coil2_Diameter
	Wend
End Function
Function C2_BuildWire()
	With Wire
	     .Reset
	     .Name "Coil2"
	     .Folder "Coil2"
	     .Radius "Coil2_Diameter/2"
	     .Type "CurveWire"
	     .Curve "Coil2:PathBot(1124.69016998515)"
	     .Material "Copper (annealed)"
	     .SolidWireModel "True"
	     .Termination "Natural"
	     .Mitering "NewMiter"
	     .AdvancedChainSelection "True"
	     .Add
	End With
End Function
Function BuildUp(radius As Double, t_start As Double, t_end As Double) As Double
	Dim t_ActualEnd As Double

	t_ActualEnd = 2*pi*Coil2_NPerLayer

	If (t_end - t_start) < 2*pi*Coil2_NPerLayer Then
		t_ActualEnd = (t_end - t_start)
	End If

	If t_ActualEnd > 0 Then
		With AnalyticalCurve
		     .Reset
		     .Name "PathUp("&CStr(t_start)&")"
		     .Curve "Coil2"
		     .LawX CStr(radius)&"*cos(t+"&CStr(t_start)&")"
		     .LawY CStr(radius)&"*sin(t+"&CStr(t_start)&")"
		     .LawZ "Coil2_Diameter/2+ t*Coil2_Diameter/(2*pi)"
		     .ParameterRange "0", CStr(t_ActualEnd)
		     .Create
		End With
	End If

	BuildUp = (t_start + t_ActualEnd)
End Function

Function BuildDown(radius As Double, t_start As Double, t_end As Double) As Double
	Dim t_ActualEnd As Double

	t_ActualEnd = 2*pi*Coil2_NPerLayer
	If (t_end - t_start) < 2*pi*Coil2_NPerLayer Then
		t_ActualEnd = (t_end - t_start)
	End If

	If t_ActualEnd > 0 Then
		With AnalyticalCurve
		     .Reset
		     .Name "PathDown("&CStr(t_start)&")"
		     .Curve "Coil2"
		     .LawX CStr(radius)&"*cos(t+"&CStr(t_start)&")"
		     .LawY CStr(radius)&"*sin(t+"&CStr(t_start)&")"
		     .LawZ "Coil2_Diameter/2+ (2*pi*Coil2_NPerLayer - t)*Coil2_Diameter/(2*pi)"
		     .ParameterRange "0", CStr(t_ActualEnd)
		     .Create
		End With
	End If

	BuildDown = (t_start + t_ActualEnd)
End Function

Function BuildTop(radius As Double, t_start As Double, t_end As Double) As Double
	Dim t_ActualEnd As Double

	t_ActualEnd = 2*pi
	If (t_end - t_start) < 2*pi Then
		t_ActualEnd = (t_end - t_start)
	End If

	If t_ActualEnd > 0 Then
		With AnalyticalCurve
		     .Reset
		     .Name "PathTop("&CStr(t_start)&")"
		     .Curve "Coil2"
		     .LawX "("&CStr(radius)&"+Coil2_Diameter*t/(2*pi))*cos(t+"&CStr(t_start)&")"
		     .LawY "("&CStr(radius)&"+Coil2_Diameter*t/(2*pi))*sin(t+"&CStr(t_start)&")"
		     .LawZ "Coil2_Diameter/2 + Coil2_NPerLayer*Coil2_Diameter"
		     .ParameterRange "0", CStr(t_ActualEnd)
		     .Create
		End With
	End If

	BuildTop = (t_start + t_ActualEnd)
End Function

Function BuildBot(radius As Double, t_start As Double, t_end As Double) As Double
	Dim t_ActualEnd As Double

	t_ActualEnd = 2*pi
	If (t_end - t_start) < 2*pi Then
		t_ActualEnd = (t_end - t_start)
	End If

	If t_ActualEnd > 0 Then
		With AnalyticalCurve
		     .Reset
		     .Name "PathBot("&CStr(t_start)&")"
		     .Curve "Coil2"
		     .LawX "("&CStr(radius)&"+Coil2_Diameter*t/(2*pi))*cos(t+"&CStr(t_start)&")"
		     .LawY "("&CStr(radius)&"+Coil2_Diameter*t/(2*pi))*sin(t+"&CStr(t_start)&")"
		     .LawZ "Coil2_Diameter/2"
		     .ParameterRange "0", CStr(t_ActualEnd)
		     .Create
		End With
	End If

	BuildBot = (t_start + t_ActualEnd)
End Function
